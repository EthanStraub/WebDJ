<!DOCTYPE html>
@{
    ViewBag.Title = "Home Page";
}

<html>
<body class="container">

    <form action="@Url.Action("Index", "Home")" method="POST">
        <script src="https://checkout.stripe.com/checkout.js" class="stripe-button"
                data-key="pk_test_6cDEXb7U4fVzevejZgaA1gDW"
                data-amount="999"
                data-name="Demo Site"
                data-description="Example charge"
                data-image="https://stripe.com/img/documentation/checkout/marketplace.png"
                data-locale="auto">
        </script>
    </form>


    <div class="inputBox">
        <input id="searchInput" name="term" value="">
    </div>

    <!--<input id="toggle" type="button" value="Play/Pause" />-->
    <input id="searchAlbums" type="button" value="Search for albums." />
    <input id="searchArtists" type="button" value="Search for artists." />
    <input id="searchTracks" type="button" value="Search for songs." />
    <input id="getId" type="button" value="DEBUG: Get user id" />
    <input id="createPlaylist" type="button" value="DEBUG: Make empty playlist" />

    <table id=resultsTable></table>

    <!--<h4 class="text-salmon">Spotify Web Playback SDK Template</h4>
    <h4>This app uses the implicit grant authorization flow to get an access token and initialise the Web Playback SDK. It then uses the Spotify Connect Web API to play a song.</h4>
    <p>If everything is set up properly, you should hear some music!</p>

    <h4> TEST TRACK </h4>
    <img id="current-track" />
    <h4 id="current-track-name"></h4>-->

</body>

    
</html>

<script>

    // Reset search box
    document.getElementById('searchInput').value = ""

    // Get the hash of the url
    const hash = window.location.hash
        .substring(1)
        .split('&')
        .reduce(function (initial, item) {
            if (item) {
                var parts = item.split('=');
                initial[parts[0]] = decodeURIComponent(parts[1]);
            }
            return initial;
        }, {});
    window.location.hash = '';

    // Set token
    let _token = hash.access_token;

    const authEndpoint = 'https://accounts.spotify.com/authorize';
    const refreshEndpoint = 'https://accounts.spotify.com/api/token'

    // Replace with your app's client ID, redirect URI and desired scopes
    const clientId = 'ddb6bd84d33c42aba1450a177ca0f23e';
    const redirectUri = 'http://localhost:53881/Home/Index/';
    const clientSecret = 'd2e2b989c762414c88b6c3121dd44a65';

    const scopes = [
        'playlist-read-private',
        'user-modify-playback-state',
        'user-read-recently-played',
        'user-read-currently-playing',
        'playlist-modify-private',
        'app-remote-control',
        'playlist-modify-public',
        'user-read-birthdate',
        'user-read-playback-state',
        'user-read-email',
        'streaming',
        'user-read-private',
        'user-top-read',
        'app-remote-control'
    ];

    // If there is no token, redirect to Spotify authorization
    if (!_token) {
        window.location = `${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join('%20')}&response_type=token&show_dialog=true`;
    }

    var searchAlbumBtn = document.getElementById("searchAlbums");
    if (searchAlbumBtn.addEventListener)
        searchAlbumBtn.addEventListener("click", searchAlbums, false);
    else if (searchAlbumBtn.attachEvent)
        searchAlbumBtn.attachEvent('onclick', searchAlbums);

    var searchArtistBtn = document.getElementById("searchArtists");
    if (searchArtistBtn.addEventListener)
        searchArtistBtn.addEventListener("click", searchArtists, false);
    else if (searchArtistBtn.attachEvent)
        searchArtistBtn.attachEvent('onclick', searchArtists);

    var searchTrackBtn = document.getElementById("searchTracks");
    if (searchTrackBtn.addEventListener)
        searchTrackBtn.addEventListener("click", searchTracks, false);
    else if (searchTrackBtn.attachEvent)
        searchTrackBtn.attachEvent('onclick', searchTracks);

    var getIdBtn = document.getElementById("getId");
    if (getIdBtn.addEventListener)
        getIdBtn.addEventListener("click", getId, false);
    else if (getIdBtn.attachEvent)
        getIdBtn.attachEvent('onclick', getId);

    var createPlaylistBtn = document.getElementById("createPlaylist");
    if (createPlaylistBtn.addEventListener)
        createPlaylistBtn.addEventListener("click", createPlaylist, false);
    else if (createPlaylistBtn.attachEvent)
        createPlaylistBtn.attachEvent('onclick', createPlaylist);

    function searchAlbums() {
        spotifyAlbumSearch(document.getElementById('searchInput').value)
    }

    function searchArtists() {
        spotifyArtistSearch(document.getElementById('searchInput').value)
    }

    function searchTracks() {
        spotifyTrackSearch(document.getElementById('searchInput').value)
    }

    function getId() {
        spotifyGetUserId();
    }

    function createPlaylist() {
        spotifyMakeEmptyPlaylist()
    }

    var resultsArray = [];
    var dataResults = "";
    var searchURL = "https://api.spotify.com/v1/search?q=";
    var table = document.getElementById("resultsTable");
    //var songIndexNum = 0;

    function spotifyAlbumSearch(term) {

        for (i = 0; i < 20; i++) {
            $("#resultsTable tr").remove();
        }

        term = term.replace(" ", "+");
        $.ajax({
            url: searchURL + term + "&type=album&market=US",
            type: "GET",
            beforeSend: function (xhr) { xhr.setRequestHeader('Authorization', 'Bearer ' + _token); },
            success: function (data) {

                console.log(data);
                for (var albumData in data) {

                    var albumItemList = [];
                    var albums = data[albumData];
                    
                    for (var item in albums) {
                        albumItemList.push(albums[item]);
                    }

                    var index = 0;

                    var results = albumItemList[1];
                    console.log(results);
                    if (results.length >= 20) {
                        $.each(results, function (key, val) {
                            var row = table.insertRow();
                            index += 1
                            row.innerHTML = '<h3>' + index + '. ' + val.name + '</h3><iframe src="https://open.spotify.com/embed/album/' + val.id + '" width="300" height="300" frameborder="2" allowtransparency="true" allow="encrypted-media"></iframe>'
                        });
                    } else if (results.length >= 1 && results.length < 20) {
                        $.each(results, function (key, val) {

                            //test case -- John Maus
                            var artistItemList = [];
                            var artistData = val.artists;
                            for (var item in artistData) {
                                artistItemList.push(artistData[item[0]].name);
                            }
                            console.log(artistItemList);


                            var row = table.insertRow();
                            index += 1
                            row.innerHTML = '<h3>' + index + '. ' + val.name + '</h3><iframe src="https://open.spotify.com/embed/album/' + val.id + '" width="300" height="300" frameborder="2" allowtransparency="true" allow="encrypted-media"></iframe>'
                        });
                        var row = table.insertRow();
                        row.innerHTML = "No more results...";
                        return;
                    } else {
                        var row = table.insertRow();
                        row.innerHTML = "No results...";
                    }
                    
                };
            }
        });
    }

    function spotifyArtistSearch(artist) {
        for (i = 0; i < 20; i++) {
            $("#resultsTable tr").remove();
        }

        artist = artist.replace(" ", "+");
        $.ajax({
            url: searchURL + artist + "&type=artist&market=US",
            type: "GET",
            beforeSend: function (xhr) { xhr.setRequestHeader('Authorization', 'Bearer ' + _token); },
            success: function (data) {

                console.log(data);
                for (var artistData in data) {

                    var artistItemList = [];
                    var artists = data[artistData];

                    for (var item in artists) {
                        artistItemList.push(artists[item]);
                    }

                    var index = 0;

                    var results = artistItemList[1];
                    console.log(results);
                    if (results.length >= 20) {
                        $.each(results, function (key, val) {
                            var row = table.insertRow();
                            index += 1;
                            row.innerHTML = '<h3>' + index + '. ' + val.name + '</h3>'
                        });
                    } else if (results.length >= 1 && results.length < 20) {
                        $.each(results, function (key, val) {
                            var row = table.insertRow();
                            index += 1;
                            row.innerHTML = '<h3>' + index + '. ' + val.name + '</h3>'
                        });
                        var row = table.insertRow();
                        row.innerHTML = "No more results...";
                        return;
                    } else {
                        var row = table.insertRow();
                        row.innerHTML = "No results...";
                    }

                };
            }
        });
    }

    function spotifyTrackSearch(term) {
        for (i = 0; i < 20; i++) {
            $("#resultsTable tr").remove();
        }

        term = term.replace(" ", "+");
        $.ajax({
            url: searchURL + term + "&type=track&market=US",
            type: "GET",
            beforeSend: function (xhr) { xhr.setRequestHeader('Authorization', 'Bearer ' + _token); },
            success: function (data) {
                console.log(data);
                for (var trackData in data) {

                    var trackItemList = [];
                    var tracks = data[trackData];

                    for (var item in tracks) {
                        trackItemList.push(tracks[item]);
                    }

                    var index = 0;

                    var results = trackItemList[1];
                    console.log(results);
                    if (results.length >= 20) {
                        $.each(results, function (key, val) {
                            var row = table.insertRow();
                            index += 1;
                            row.innerHTML = '<h3>' + index + '. ' + val.name + '</h3><iframe src="https://open.spotify.com/embed/track/' + val.id + '" width="300" height="84" frameborder="2" allowtransparency="true" allow="encrypted-media"></iframe>'
                        });
                    } else if (results.length >= 1 && results.length < 20) {
                        $.each(results, function (key, val) {
                            var row = table.insertRow();
                            index += 1;
                            row.innerHTML = '<h3>' + index + '. ' + val.name + '</h3><iframe src="https://open.spotify.com/embed/track/' + val.id + '" width="300" height="84" frameborder="2" allowtransparency="true" allow="encrypted-media"></iframe>'
                        });
                        var row = table.insertRow();
                        row.innerHTML = "No more results...";
                        return;
                    } else {
                        var row = table.insertRow();
                        row.innerHTML = "No results...";
                    }

                };
            }
        });
    }

    function spotifyGetUserId() {
        $.ajax({
            url: "https://api.spotify.com/v1/me",
            type: "GET",
            beforeSend: function (xhr) { xhr.setRequestHeader('Authorization', 'Bearer ' + _token); },
            success: function (data) {
                console.log(data.id);
                return data.id;
            }
        });
    }

    function spotifyMakeEmptyPlaylist() {
        var myData = JSON.stringify({ name: "test", public: true });

        $.ajax({
            url: 'https://api.spotify.com/v1/me/playlists',
            method: "POST",
            headers: {
                'Authorization': 'Bearer ' + _token,
                'Content-Type': 'application/json'
            },
            data: myData,
            success: function (response) {
                console.log(response);
            },
            error: function (response) {
                console.log(response);
                console.log("ERROR");
            }
        });
    }

</script>